<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[搭建博客（二）：Hexo的使用]]></title>
    <url>%2F2017%2F08%2F03%2Fcreat-new-blog-2%2F</url>
    <content type="text"><![CDATA[导语： &emsp;&emsp;上篇已经介绍了如何部署Hexo和Github所需要的环境，接下来就来说说Hexo怎么使用。 &emsp;&emsp;一直在说Hexo，什么是Hexo？其实Hexo就是一个博客框架，将支持的类型文件转换成静态Web页面。它不是一个应用，不具备用户界面，想要它动作，需要的是命令行。所以，记住一些常用的命令行就显得尤为必要。不过，想要轻松的玩转它还是非常容易的。 &emsp;&emsp;在这里，我们还会接触到一个东西叫做markdown，它是文本编辑中一种非常简练的标记语言。可以轻松的让你的文本内容具有一定的格式，不像word那样繁琐，冗余。编辑后的文章非常适合阅读。总之，我现在越来越喜欢它了。 当然，装逼之余还是要特别感谢： &emsp;&emsp;吴小龙同學、cnfeat、Te_Lee、IIssNan、wuchong Hexo的认识与基本配置 了解框架非常有助与以后的学习和操作。如果你对前端感兴趣，那么世界的第八大洲在向你招手。 一、认识目录框架目录框架 ├──.deploy &emsp;&emsp;&emsp;&emsp;&emsp;#需要部署的文件 ├── node_modules &emsp; #Hexo插件 ├── public &emsp;&emsp;&emsp;&emsp;&emsp; #生成的静态网页文件 ├── scaffolds &emsp;&emsp;&emsp;&emsp;#模板 ├── source &emsp;&emsp;&emsp;&emsp;&emsp;#博客正文和其他源文件，404、favicon、CNAME 都应该放在这里 |&emsp;&emsp;├── _drafts&emsp;&emsp;&emsp;#草稿 |&emsp;&emsp;└── _posts &emsp;&emsp;&emsp;#文章 ├── themes &emsp;&emsp;&emsp;&emsp;&emsp;#主题 ├── _config.yml &emsp;&emsp;&emsp; #全局配置文件 └── package.json 其中，常用的是source、themes、_config.yml。 source中存放文章和页面信息。写文章最常用到的文件夹。 themes中存放是主题，也就是博客页面的皮肤。可以到百度上找Hexo的皮肤，有很多很多，如果自己感兴趣，也可以自己制作，不过难度就比较高了。 _config.yml中存放的是配置文件信息。网站主要站点配置都在这里面。 二、修改配置这是我的配置，修改有#号加中文注释的地方就可以。 # Hexo Configuration ## Docs: https://hexo.io/docs/configuration.html ## Source: https://github.com/hexojs/hexo/ # Site title: ISLAND #标题 subtitle: record my life #副标题 description: 不修电脑 #站点描述 author: 音乐通常晚睡 #作者 email: 1206125464@qq.com #电子邮箱 language: zh-Hans #语言，我用的是NexT主题。没有主题填zh-CN timezone: Asia/Shanghai # URL ## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos; url: #网址 root: / #根目录 permalink: :year/:month/:day/:title/ #文章链接格式 permalink_defaults: # Directory source_dir: Source #源文件目录 public_dir: public #生成的网站文件目录 tag_dir: tags #标签目录 archive_dir: archives #存档目录 category_dir: categories #分类目录 code_dir: downloads/code i18n_dir: :lang skip_render: # Writing new_post_name: :title.md #新文章标题格式 default_layout: post #默认的模板，包括 post、page、photo、draft titlecase: false #标题转换成大写 external_link: true #在新选项卡中打开链接 filename_case: 0 render_drafts: false post_asset_folder: false relative_link: false future: true highlight: #语法高亮 enable: true #是否打开 line_number: true #显示行号 auto_detect: false tab_replace: # Home page setting # path: Root path for your blogs index page. (default = &apos;&apos;) # per_page: Posts displayed per page. (0 = disable pagination) # order_by: Posts order. (Order by date descending by default) index_generator: path: &apos;&apos; per_page: 10 order_by: -date # Category &amp; Tag default_category: uncategorized #默认分类 category_map: tag_map: # Date / Time format ## Hexo uses Moment.js to parse and display date ## You can customize the date format as defined in ## http://momentjs.com/docs/#/displaying/format/ date_format: YYYY-MM-DD time_format: HH:mm:ss # Pagination ## Set per_page to 0 to disable pagination per_page: 10 #每页文章数 pagination_dir: page # Extensions ## Plugins: https://hexo.io/plugins/ ## Themes: https://hexo.io/themes/ theme: next #主题 # Deployment ## Docs: https://hexo.io/docs/deployment.html deploy: type: git repository: https://github.com/x1206125464/x1206125464.github.io.git branch: master 其中，如下代码一定要正确。 deploy: type: git repository: https://github.com/x1206125464/x1206125464.github.io.git branch: master repository部分按如下操作找到。 注意： 配置文件的冒号：后面一定要加一个空格，不然会报错的 第一次修改配置文件之后，一定要在Git Bash里面输入并回车下面指令 npm install hexo-deployer-git --save 如果在配置文件里面有中文。就必须用utf8编码格式。可以到网上在线转换（麻烦死了），或者去网上下载一个Sublime text3，永久免费试用的（超级万能，谁用谁知道）。 三、打开博客接下来就是激动人心的时刻，输入并回车下面指令 hexo generate hexo deploy 如果最后提示[info] Deploy done: git 那么，登陆你的GitHub,按如下操作打开你的个人博客！ 下滚找到： 这样别人就可以看见你的个人博客了。 Hexo的相关操作今天先更新到这里，工作有点忙了。加上个人身体不是非常舒服。相关指令可以自行研究。 接下来会慢慢讲如何写文章，如何修改皮肤。 About me 音乐通常晚睡 一个热爱音乐的程序员 没了]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>github</tag>
        <tag>blog</tag>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[搭建博客（一）：Hexo和Github的环境搭建]]></title>
    <url>%2F2017%2F08%2F03%2Fcreate-new-blog%2F</url>
    <content type="text"><![CDATA[导语： &emsp;&emsp;博客创建之初，还是有必要写一篇自己创建博客的心路历程，好在以后和亲朋好友吹牛逼的时候，说话能有点底气。 &emsp;&emsp;个人在Hexo+Github搭建个人博客上其实并没有什么基础，但是由于网上很多优秀的分享家写了许多教程，让我们这些新手也是可以非常快速的建立起属于自己的一个Island。 &emsp;&emsp;当然自己也希望能加入他们的行列，成为优秀的分享家。 在此特别感谢： &emsp;&emsp;吴小龙同學、cnfeat、Te_Lee、IIssNan、wuchong 小门槛 搭建博客其实很折腾，非常需要耐心，这很重要 也需要一定的学习能力，遇到问题就要绕着弯的去找答案（好好使用搜索引擎） 最好有一些代码基础，这样会容易一些，不过并不是一定需要代码基础（详见上面两条） 开始吧：一、环境准备：1、下载并安装Git这很简单，进入下载页面Git，Download一下，安装一下就可以了。（安装软件最好文件夹分类一下，不然很乱） 2、下载并安装Node.js这也很简单，进入下载页面Node.js，找到Windows Installer下载一下，安装一下就可以了。（电脑版本对应就可以） 3、安装Hexo这里嘛。就有那么一点不同了。差不多进入敲码阶段了。 随便在桌面找个地方右击鼠标。选择Git Bash（前提是已经下载了Git），输入并回车下面指令 npm install -g hexo 如果出现npm WARN deprecated swig@1.4.2: This package is no longer maintained，那并没有太大的影响，继续下面的步骤就好。 如果出现npm ERR! registry error parsing json，那就需要设置npm代理，输入并回车下面指令 npm config set registry http://registry.cnpmjs.org 重新执行上面的安装命令安装一下hexo就可以了。 4、部署Hexo安装完成之后，在你想要的文件下面（比如E:\hexo），右击选择Git Bash，输入并回车下面指令 hexo init hexo会自动建立所需要的所有文件。 然后安装依赖包，输入并回车下面指令 npm install 这样就建立好了本地的hexo博客了！输入并回车下面指令 hexo generate hexo server 接着就可以在浏览器输入localhost:4000，查看自己的本地博客页面了！ 有可能在执行hexo server提示找不到指令，输入并回车下面指令 npm install hexo -server --save 嗯，到这里，本地的博客已经搭建完成了，但是只是本地的，别人是看不到的，不过别急，接着下面的操作。 二、部署到Github：1、注册账号打开Github，注册一下账号，登陆。 2、创建仓库创建一个新的repository，不懂怎么创建自行百度。 这个仓库的名字需要和你的账号对应，格式：your_user_name.github.io 3、获取SSH密钥SSH keys是让本地的Git项目和远程的Github建立联系。 1）先检查一下电脑上是否有SSH keys。输入并回车下面指令 cd ~/. ssh 提示No such file or directory，说明是第一次使用。 2）生成新的SSH keys。输入并回车下面指令 ssh-keygen -t rsa -C &quot;你的邮件地址&quot; -C中的C为大写的C，然后根据提示按三个回车。 看到这样的图，就表示成功了 可以在C:\Users\admin.ssh下，得到两个文件id_rsa和id_rsa.pub。 3）之后就可以添加SSH keys到Github 1、打开本地C:\Users\admin.ssh\id_rsa.pub文件。此文件里面内容为刚才生成人密钥。 如果看不到这个文件，你需要设置显示隐藏文件。 用记事本打开，复制全文。打开SSH keys。Add SSH key，全部粘贴。 4）测试一下 输入并回车下面指令，git@github.com的部分不要修改 ssh -T git@github.com 会反馈 The authenticity of host ‘github.com ( 207.97.227.239 )’ can’t be established.RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.Are you sure you want to continue connecting (yes/no)? 输入yes，就可以看到You’ve successfully authenticated, but GitHub does not provide shell access. 5）设置用户信息 SSH已经链接了。下面只需要完善一下个人信息就可以。输入并回车下面指令 git config --global user.name &quot;你的用户名&quot; git config --global user.email &quot;你的邮箱&quot; 如果以上关于SSH的步骤有错误。可以参考: GitHub Help - Generating SSH Keys GitHub Help - Error Permission denied (publickey) 完成（一）（二）两个步骤。你的个人博客已经完全建立成功了。接下来就是怎么使用了。 关于如何使用呢？ 我们下一篇慢慢介绍。 About me 音乐通常晚睡 一个热爱音乐的程序员 没了]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>github</tag>
        <tag>blog</tag>
        <tag>markdown</tag>
      </tags>
  </entry>
</search>